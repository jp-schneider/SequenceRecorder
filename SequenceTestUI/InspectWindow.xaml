<Window x:Class="Sequence.Test.UI.InspectWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sequence.Test.UI"
        xmlns:json ="clr-namespace:Newtonsoft.Json;assembly=Newtonsoft.Json"
        xmlns:jsonLinq ="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
        mc:Ignorable="d" Background="AliceBlue"
        Title="InspectWindow" Height="450" Width="800">
    <Window.Resources>
        <DataTemplate x:Key="ComboboxTemplate">
            <ComboBox x:Name="ComboBoxColumn" PreviewTextInput="ComboBoxColumn_PreviewTextInput"
                    ItemsSource="{Binding DataContext.EventTypes, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}}"
                    SelectedValue="{Binding Event}"
                    DisplayMemberPath="Display"
                    SelectedValuePath="EventType"
                    IsEnabled="False"
                    IsEditable="False"
                    IsReadOnly="True"
                    >

            </ComboBox>
        </DataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type jsonLinq:JArray}" ItemsSource="{Binding Converter={StaticResource MethodInvokeConverter}, ConverterParameter='Children'}">
            <TextBlock Text="Array">
            </TextBlock>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type jsonLinq:JProperty}" ItemsSource="{Binding Converter={StaticResource MethodInvokeConverter}, ConverterParameter='Children'}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Property name: "/>
                <TextBlock Text="{Binding Path=Name, Mode=OneWay}"/>
            </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type jsonLinq:JObject}" ItemsSource="{Binding Converter={StaticResource MethodInvokeConverter}, ConverterParameter='Children'}">
            <TextBlock Text="Object">
            </TextBlock>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type jsonLinq:JConstructor}" ItemsSource="{Binding Converter={StaticResource MethodInvokeConverter}, ConverterParameter='Children'}">
            <TextBlock Text="Constructor">
            </TextBlock>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type jsonLinq:JRaw}" ItemsSource="{Binding Converter={StaticResource MethodInvokeConverter}, ConverterParameter='Children'}">
            <TextBlock Text="Raw">
            </TextBlock>
        </HierarchicalDataTemplate>
        <DataTemplate DataType="{x:Type jsonLinq:JValue}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Value: "/>
                <TextBox Text="{Binding Value, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:LogItem}" x:Key="ItemsTemp">
            <Grid MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}"
                  MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}"
                  >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Label Content="Kind:"/>
                    <TextBlock VerticalAlignment="Center" Text="{Binding TypeName}"/>
                    <Label Content="Time:"/>
                    <TextBlock VerticalAlignment="Center" Text="{Binding OccuredTime, StringFormat=H:mm:ss.fff}"/>
                    <Label Content="Event name:"/>
                    <TextBlock VerticalAlignment="Center" Text="{Binding EventName}"/>
                    
                </StackPanel>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <Label Content="Sender:"/>
                    <TextBlock VerticalAlignment="Center" Text="{Binding Sender}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="2" MinHeight="25">
                    <TreeView Margin="5,0,0,0" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" MinWidth="100" ItemsSource="{Binding Tokens}"
                              MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}"
                                MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}"
                    >
                    </TreeView>
                    <Button x:Name="btnCalculate"  Margin="5,0,0,0" Content="Display" Click="btnCalculate_Click" Width="50" Height="25" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                </StackPanel>
                
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ButtonDeleteTemplate">
            <Button Margin="2" x:Name="btnDeleteRow" Click="BtnDeleteRow_Click" Width="{Binding ActualHeight ,RelativeSource={RelativeSource self}}" Content="x" VerticalContentAlignment="Center" VerticalAlignment="Center"  HorizontalAlignment="Center"/>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.15*"/>
                <RowDefinition Height="0.60*"/>
                <RowDefinition Height="0.15*"/>
            </Grid.RowDefinitions>
            <Label Content="Tracking Overview:"></Label>
            <DataGrid Grid.Row="1" CanUserDeleteRows="True" ItemsSource="{Binding EventDefinitions}" IsReadOnly="False" CanUserAddRows="false" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="200" CellTemplate="{StaticResource ComboboxTemplate}" IsReadOnly="True" Header="EventType" CellEditingTemplate="{StaticResource ComboboxTemplate}">

                    </DataGridTemplateColumn>
                    <DataGridCheckBoxColumn Binding="{Binding AssignRecursively, Mode=TwoWay}" IsReadOnly="True" Header="Recursive"/>
                    <DataGridTemplateColumn Width="50" Header="Delete" IsReadOnly="True" CellTemplate="{StaticResource ButtonDeleteTemplate}" CellEditingTemplate="{StaticResource ButtonDeleteTemplate}" />
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Orientation="Horizontal" Grid.Row="2">
                <ComboBox x:Name="ComboBoxColumn" PreviewTextInput="ComboBoxColumn_PreviewTextInput"
                    ItemsSource="{Binding EventTypes, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                    SelectedValue="{Binding AddEventType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                    DisplayMemberPath="Display"
                    SelectedValuePath="EventType"
                    IsEditable="True"
                    Margin="0,2,10,2"
                    Width="200"
                    >

                </ComboBox>
                <CheckBox Content="Recursive" Margin="0,2,10,2" FontSize="15" VerticalAlignment="Center" IsChecked="{Binding AddIsRecursive}"/>
                <Button Content="Add" x:Name="btnAdd" Width="50" Margin="0,2,10,2" Click="btnAdd_Click"/>
            </StackPanel>
            
        </Grid>
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.33*"/>
                <ColumnDefinition Width="0.33*"/>
                <ColumnDefinition Width="0.33*"/>
            </Grid.ColumnDefinitions>
            <ListView x:Name="lvLogItems" Background="AliceBlue" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" ItemTemplate="{DynamicResource ItemsTemp}">
                <ListView.ItemsSource>
                    <MultiBinding Mode="OneWay" Converter="{StaticResource LogMultiConverter}">
                        <Binding Path="Target"/>
                        <Binding Path="ShowEventOccured"/>
                        <Binding Path="ShowProcessingStarted" />
                        <Binding Path="ShowProcessingFinished" />
                        <Binding Path="ShowLog"/>
                    </MultiBinding>
                </ListView.ItemsSource>
           
            </ListView>
            <StackPanel Grid.Column="2">
                <Label Content="Show:"/>
                <CheckBox x:Name="cbShowEventOccured" Content="EventOccured" IsChecked="{Binding ShowEventOccured}"/>
                <CheckBox x:Name="cbShowProcessingStarted" Content="ProcessingStarted" IsChecked="{Binding ShowProcessingStarted}"/>
                <CheckBox x:Name="cbShowProcessingFinished" Content="ProcessingFinished" IsChecked="{Binding ShowProcessingFinished}"/>
                <CheckBox x:Name="cbShowLog" Content="Log" IsChecked="{Binding ShowLog}"/>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Log Level:"/>
                    <ComboBox HorizontalAlignment="Left"  VerticalAlignment="Center"  Height="23" Width="80" SelectedItem="{Binding Type, Mode=TwoWay}" ItemsSource="{Binding Types, Mode=OneWay}"></ComboBox>
                </StackPanel>
                <Button x:Name="btnSave" Click="btnSave_Click" Content="Save Events" Margin="2,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75"/>

            </StackPanel>

        </Grid>
    </Grid>
</Window>
